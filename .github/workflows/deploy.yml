name: Build & Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          tools:
            composer
          php-version: '8.2'
          extensions: imagick

      - name: 'Create env file'
        run: |
          touch .env
          echo APP_KEY= >> .env
          cat .env

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts

      - name: Copy with rsync
        run: rsync -avz --delete ./storage/app/static/* ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:blog/${{ github.sha }}

      - name: Build and Launch
        env:
          LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
          LIGHTSAIL_USER: ${{ secrets.LIGHTSAIL_USER }}
          GITHUB_SHA: ${{ github.sha }}
          WORKDIR: "blog"
        run: |
          # Fix img permissions
          ssh $LIGHTSAIL_USER@$LIGHTSAIL_HOST "cd ~/$WORKDIR/$GITHUB_SHA/ && chmod -R 755 img"

          # Add robots.txt
          ssh $LIGHTSAIL_USER@$LIGHTSAIL_HOST "cd ~/$WORKDIR/$GITHUB_SHA/ && echo 'User-agent: *' > robots.txt && echo 'Disallow: /' >> robots.txt"

          # Change symlink and delete old version
          ssh $LIGHTSAIL_USER@$LIGHTSAIL_HOST "cd ~/$WORKDIR && rm ~/$WORKDIR/current 2> /dev/null && ln -sfn ~/$WORKDIR/$GITHUB_SHA ~/$WORKDIR/current"

          # Delete old versions
          ssh $LIGHTSAIL_USER@$LIGHTSAIL_HOST "cd ~/$WORKDIR && ls -dt */ | tail -n +3 | xargs rm -rf"

      - name: Notify deployment success
        run: echo "Deployment to Lightsail successful!"
